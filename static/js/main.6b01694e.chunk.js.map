{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","changeHandler","type","onChange","App","handleChange","e","setState","searchField","target","value","console","log","state","a","axios","get","users","this","data","filterdMonsters","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0WAEaA,EAAO,SAAAC,GAChB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,4BACKL,EAAMI,QAAQE,OAEnB,4BACKN,EAAMI,QAAQG,YCPlBC,EAAW,SAAAR,GAEpB,OAAO,qBAAKC,UAAU,YAAf,SACHD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACtB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCLlBM,G,MAAY,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,cACrC,OACI,uBACIZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCgCPG,E,kDAjCb,aAAe,IAAD,8BACZ,gBAYFC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,QAAS,WAC7CC,QAAQC,IAAI,EAAKC,WAbnB,EAAKA,MAAQ,CACXhB,SAAU,GACVW,YAAa,IAJH,E,4FAQd,4BAAAM,EAAA,sEACoBC,IAAMC,IAAI,8CAD9B,OACMC,EADN,OAEEC,KAAKX,SAAS,CAAEV,SAAUoB,EAAME,OAFlC,gD,0EAUA,WAAU,IAAD,EAC2BD,KAAKL,MAA/BhB,EADD,EACCA,SAAUW,EADX,EACWA,YACZY,EAAkBvB,EAASwB,QAAO,SAAA7B,GAAO,OAC7CA,EAAQE,KAAK4B,cAAcC,SAASf,EAAYgB,wBAClD,OACE,sBAAKnC,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CAAWW,YAAY,kBAAkBC,cAAeiB,KAAKb,eAC7D,cAAC,EAAD,CAAUR,SAAUuB,W,GA3BVK,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6b01694e.chunk.js","sourcesContent":["import React from 'react';\nimport './card.style.css'\nexport const Card = props => {\n    return (\n        <div className='card-container'>\n            <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\n            <p >\n                {props.monster.name}\n            </p>\n            <p>\n                {props.monster.email}\n            </p>\n        </div>\n\n    )\n}","import React from 'react';\nimport './card-list.style.css';\nimport { Card } from '../card/card.component';\nexport const CardList = props => {\n\n    return <div className=\"card-list\">{\n        props.monsters.map(monster => (\n            <Card key={monster.id} monster={monster} />\n        ))\n    }</div>\n}","import React from 'react';\nimport './search-box.style.css'\nexport const SearchBox = ({ placeholder, changeHandler }) => {\n    return (\n        <input\n            className=\"search\"\n            type=\"search\"\n            placeholder={placeholder}\n            onChange={changeHandler}\n        />\n    )\n}","import { Component } from 'react'\nimport './App.css';\nimport axios from 'axios';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n  }\n\n  async componentDidMount() {\n    let users = await axios.get('https://jsonplaceholder.typicode.com/users')\n    this.setState({ monsters: users.data })\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value }, () => {\n      console.log(this.state);\n    })\n  }\n  render() {\n    const { monsters, searchField } = this.state\n    const filterdMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLocaleLowerCase()))\n    return (\n      <div className=\"App\">\n        <h1>Monsters lodoex</h1>\n        <SearchBox placeholder=\"search monstars\" changeHandler={this.handleChange} />\n        <CardList monsters={filterdMonsters}></CardList>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}